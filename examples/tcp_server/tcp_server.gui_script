local tcp_server = require "defnet.tcp_server"
local dirtylarry = require "gooey.themes.dirtylarry.dirtylarry"

local TCP_SERVER_PORT = 5555

local function on_data(data, ip, port, client)
	print("TCP server received data '" .. data .. "' from " .. ip .. ":" .. port)
	local logo = gui.get_node("logo")
	gui.animate(logo, "euler.z", gui.get_euler(logo).z -360, gui.EASING_INOUTEXPO, 2, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
end

local function on_client_connected(ip, port, client)
	print("Client connected from " .. ip .. ":" .. port)
end

local function on_client_disconnected(ip, port, client)
	print("Client discconnected from " .. ip .. ":" .. port)
end

function init(self)
	msg.post(".", "acquire_input_focus")

	dirtylarry.set_enabled(dirtylarry.button("stop"), false)
	dirtylarry.set_enabled(dirtylarry.button("broadcast"), false)
		
	self.tcp_server = tcp_server.create(TCP_SERVER_PORT, on_data, on_client_connected, on_client_disconnected)
end

function final(self)
	msg.post(".", "release_input_focus")
	if self.tcp_server then
		self.tcp_server.stop()
	end
end

function update(self, dt)
	if self.tcp_server then
		self.tcp_server.update()
	end
end

function on_input(self, action_id, action)
	dirtylarry.button("start", action_id, action, function()
		self.tcp_server.start()
		dirtylarry.set_enabled(dirtylarry.button("start"), false)
		dirtylarry.set_enabled(dirtylarry.button("broadcast"), true)
		dirtylarry.set_enabled(dirtylarry.button("stop"), true)
	end)
	dirtylarry.button("stop", action_id, action, function()
		dirtylarry.set_enabled(dirtylarry.button("start"), true)
		dirtylarry.set_enabled(dirtylarry.button("broadcast"), false)
		dirtylarry.set_enabled(dirtylarry.button("stop"), false)
		self.tcp_server.stop()
	end)
	dirtylarry.button("broadcast", action_id, action, function()
		self.tcp_server.broadcast("tcp from sever to client foobar\n")
	end)
end
